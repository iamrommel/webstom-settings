<templateSet group="JavaScript Testing">
  <template name="utdesc" value="describe('$NAME$', function() {&#10;     beforeEach(function() {&#10;  &#10;    });&#10;    &#10;    it('should run successfully'); &#10;    &#10;});" description="Inserts describe() block" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="camelCase(&quot;MethodName&quot;)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="it" value="it('should $NAME$'); " description="Inserts it() block" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="ut" value="import * as td from 'testdouble'&#10;&#10;describe('$CLASSNAME$', function (){&#10;    let  ut, $CLASSNAME$&#10;&#10;    before(function () {&#10;        $CLASSNAME$ = require('./$CLASSNAME$').$CLASSNAME$       &#10;    })&#10;    &#10;    beforeEach(function () {&#10;        ut = new $CLASSNAME$()&#10;    })&#10;    &#10;    describe('$METHODNAME$', function() {&#10;     beforeEach(function() {&#10;  &#10;    });&#10;    &#10;    it('should run successfully'); &#10;    &#10;});&#10;    &#10;    &#10;})&#10;" description="Unit test file" toReformat="true" toShortenFQNames="true">
    <variable name="CLASSNAME" expression="fileNameWithoutExtension()" defaultValue="CLASSNAME" alwaysStopAt="true" />
    <variable name="METHODNAME" expression="camelCase(&quot;MethodName&quot;)" defaultValue="METHODNAME" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="utj" value="&#10;describe('$CLASSNAME$', function () {&#10;  describe('$METHODNAME$', function () {&#10;    beforeEach(() =&gt; {&#10;&#10;    })&#10;&#10;    afterEach(() =&gt; {&#10;      jest.resetAllMocks()&#10;    })&#10;&#10;    afterAll(() =&gt; {&#10;      jest.restoreAllMocks()&#10;    })&#10;&#10;    test.todo('should run successfully')&#10;  })&#10;})&#10;" description="Unit test file using jest" toReformat="false" toShortenFQNames="true">
    <variable name="CLASSNAME" expression="fileNameWithoutExtension()" defaultValue="CLASSNAME" alwaysStopAt="true" />
    <variable name="METHODNAME" expression="camelCase(&quot;MethodName&quot;)" defaultValue="METHODNAME" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="utdescj" value="describe('$NAME$', function() {&#10;    beforeEach(() =&gt; {&#10;&#10;    })&#10;&#10;    afterEach(() =&gt; {&#10;      jest.resetAllMocks()&#10;    })&#10;&#10;    afterAll(() =&gt; {&#10;      jest.restoreAllMocks()&#10;    })&#10;    &#10;    test.todo('should run successfully'); &#10;    &#10;});" description="Inserts describe() block" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="camelCase(&quot;MethodName&quot;)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="itj" value="test.todo('should $NAME$'); " description="Inserts it() block" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>